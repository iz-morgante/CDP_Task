getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/CDP_Task/Code/") # set working directory
rm(list=ls(all=TRUE))
graphics.off()
require(ggplot2)
require(dplyr)
cdp_data <- read.csv(file = "../Data/Electricity generation by source - top 5.csv", stringsAsFactors = TRUE)
head(cdp_data) # View first few rows
str(cdp_data) # View data structure
names(which(colSums(is.na(cdp_data))>0)) # List columns containing NAs
head(cdp_data[rowSums(is.na(cdp_data)) > 0, ]) # List first rows that contain NAs
# Change column name to avoid dots and remove NAs
cdp_data <- rename(cdp_data, ElectricityGeneration_GWh = Electricity.Generation..GWh.) %>% na.omit()
###### FIND WAY TO REPESENT THIS AS GRAPH NOT JUST AS A TABLE.  REPORT NUMBER OF NA rows
total_electricity <- cdp_data  %>%
group_by(Year, Country) %>%
summarise(Total_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh))
#Plots for countries
p_country_totals <- ggplot(filter(total_electricity, Country!='World'), aes(x = Year, y = Total_ElectricityGeneration_GWh, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
#theme(legend.position="bottom") +
ylab("Total Electricity Generation [GWh]")
p_country_totals
# Choose country to explore
country <- "China"
country_data <- filter(cdp_data, Country == country)
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
FF_electricity <- filter(cdp_data, Source == c("Coal", "Natural gas", "Oil")) %>% # filter by fossil fuel
group_by(Year, Country) %>%
summarise(FossilFuel_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh)) # sum generation values from all sources
FF_Total_electricity <- full_join(FF_electricity, total_electricity, by = c('Year', 'Country')) %>% # join total generation with fossil fuel generation
mutate(
Percent_FF = FossilFuel_ElectricityGeneration_GWh / Total_ElectricityGeneration_GWh # calculate percentage
)
p_FF_percent <- ggplot(FF_Total_electricity, aes(x = Year, y = Percent_FF, fill=Country)) +
geom_point(color=Country) +
geom_line(color=Country)+
theme_bw() +
ylab("Proportion of electricity generated by fossil fuels")
View(FF_Total_electricity)
View(FF_Total_electricity)
str(total_electricity)
str(FF_Total_electricity)
p_FF_percent <- ggplot(FF_Total_electricity, aes(x = Year, y = Percent_FF, fill=Country)) +
geom_point(color=Country) +
geom_line(color=Country) +
theme_bw() +
ylab("Proportion of electricity generated by fossil fuels")
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
FF_electricity <- filter(cdp_data, Source == c("Coal", "Natural gas", "Oil")) %>% # filter by fossil fuel
group_by(Year, Country) %>%
summarise(FossilFuel_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh)) # sum generation values from all sources
FF_Total <- full_join(FF_electricity, total_electricity, by = c('Year', 'Country')) %>% # join total generation with fossil fuel generation
mutate(
Percent_FF = FossilFuel_ElectricityGeneration_GWh / Total_ElectricityGeneration_GWh # calculate percentage
)
p_FF_percent <- ggplot(Total_electricity, aes(x = Year, y = Percent_FF, fill=Country)) +
geom_point(color=Country) +
geom_line(color=Country) +
theme_bw() +
ylab("Proportion of electricity generated by fossil fuels")
p_FF_percent <- ggplot(FF_Total, aes(x = Year, y = Percent_FF, fill=Country)) +
geom_point(color=Country) +
geom_line(color=Country) +
theme_bw() +
ylab("Proportion of electricity generated by fossil fuels")
View(FF_Total)
View(FF_Total)
p_FF_percent <- ggplot(FF_Total, aes(x = Year, y = Percent_FF, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("Percentage electricity generated by fossil fuels")
p_FF_percent
View(FF_electricity)
View(FF_electricity)
# Set working directory
setwd("~/Documents/CDP_Task/Code/")
rm(list=ls(all=TRUE))
graphics.off()
# Packages
require(ggplot2)
require(dplyr)
library(rvest)
# Load data
cdp_data <- read.csv(file = "../Data/Electricity generation by source - top 5.csv", header = TRUE)
# Explore data
head(cdp_data) #first few rows
str(cdp_data) #structure
# Change column name to avoid dots
names(cdp_data)[names(cdp_data) == "Electricity.Generation..GWh."] <- "ElectricityGeneration_GWh"
# Sum  all source electricity for each country
total_electricity <- aggregate(cdp_data$ElectricityGeneration_GWh, by=list(Year = cdp_data$Year, Country = cdp_data$Country),FUN=sum, na.rm=TRUE)
names(total_electricity)[names(total_electricity) == "x"] <- "ElectricityGeneration_GWh"
country_total_electricity <- total_electricity[!total_electricity$Country=='World',] # ignore world values
p_country_totals <- ggplot(country_total_electricity, aes(x = Year, y = ElectricityGeneration_GWh, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("Total Electricity Generation [GWh]")
p_country_totals
p_global_totals <- ggplot(total_electricity[total_electricity$Country=='World',], aes(x = Year, y = ElectricityGeneration_GWh, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("Total Electricity Generation [GWh]")
p_global_totals
# Choose country to explore
country <- "China"
country_data <- subset(cdp_data, cdp_data$Country == country) # Subset data by contry of interest
country_data <- na.omit(country_data) # remove NAs
# Plot different sources over time
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
# Combine fossil fuels
FF_electricity <- subset(country_data, country_data$Source == "Coal" | country_data$Source == "Natural gas" | country_data$Source == "Oil")
####FF <- filter(country_data, Source == "Coal" | Source == "Natural gas" | Source == "Oil")
FF_electricity <- aggregate(FF_electricity$ElectricityGeneration_GWh, by=list(Year = FF_electricity$Year), FUN=sum, na.rm=TRUE)
names(FF_electricity)[names(FF_electricity) == "x"] <- "ElectricityGeneration_GWh"
FF_electricity$Source <- "Fossil Fuel"
# Find FF as a percentage of total generation
country_total <- subset(total_electricity, total_electricity$Country == country)
country_total$Country <- NULL
country_total$Source <- "Total"
# Combine FF and Total
FF_totals <- rbind(country_total, FF_electricity)
percent_FF <- data.frame(matrix(ncol=2,nrow=length(unique(FF_totals$Year)), dimnames=list(NULL, c("Year", "Percentage"))))
count <- 1
for (i in unique(FF_totals$Year)){
df <- subset(FF_totals, FF_totals$Year == i)
percent <- df[df$Source == "Fossil Fuel", "ElectricityGeneration_GWh"] / df[df$Source == "Total", "ElectricityGeneration_GWh"]
percent_FF$Year[count] <- i
percent_FF$Percentage[count] <- percent * 100
count = count + 1
}
# Plot
p_china_FF <- ggplot(percent_FF, aes(x = Year, y = Percentage)) +
geom_point() +
geom_line()+
theme_bw() +
ylab("Percentage of electricity generated by fossil fuels in China")
p_china_FF
FF_electricity <- filter(cdp_data, Source == c("Coal", "Natural gas", "Oil")) %>% # filter by fossil fuel
group_by(Year, Country) %>%
summarise(FossilFuel_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh)) # sum generation values from all sources
FF_Total <- full_join(FF_electricity, total_electricity, by = c('Year', 'Country')) %>% # join total generation with fossil fuel generation
mutate(
Percent_FF = FossilFuel_ElectricityGeneration_GWh / Total_ElectricityGeneration_GWh # calculate percentage
)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/CDP_Task/Code/") # set working directory
rm(list=ls(all=TRUE))
graphics.off()
require(ggplot2)
require(dplyr)
cdp_data <- read.csv(file = "../Data/Electricity generation by source - top 5.csv", stringsAsFactors = TRUE)
head(cdp_data) # View first few rows
str(cdp_data) # View data structure
names(which(colSums(is.na(cdp_data))>0)) # List columns containing NAs
head(cdp_data[rowSums(is.na(cdp_data)) > 0, ]) # List first rows that contain NAs
# Change column name to avoid dots and remove NAs
cdp_data <- rename(cdp_data, ElectricityGeneration_GWh = Electricity.Generation..GWh.) %>% na.omit()
###### FIND WAY TO REPESENT THIS AS GRAPH NOT JUST AS A TABLE.  REPORT NUMBER OF NA rows
total_electricity <- cdp_data  %>%
group_by(Year, Country) %>%
summarise(Total_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh))
#Plots for countries
p_country_totals <- ggplot(filter(total_electricity, Country!='World'), aes(x = Year, y = Total_ElectricityGeneration_GWh, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
#theme(legend.position="bottom") +
ylab("Total Electricity Generation [GWh]")
p_country_totals
# Choose country to explore
country <- "China"
country_data <- filter(cdp_data, Country == country)
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
FF_electricity <- filter(cdp_data, Source == c("Coal", "Natural gas", "Oil")) %>% # filter by fossil fuel
group_by(Year, Country) %>%
summarise(FossilFuel_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh)) # sum generation values from all sources
FF_Total <- full_join(FF_electricity, total_electricity, by = c('Year', 'Country')) %>% # join total generation with fossil fuel generation
mutate(
Percent_FF = FossilFuel_ElectricityGeneration_GWh / Total_ElectricityGeneration_GWh # calculate percentage
)
p_FF_percent <- ggplot(FF_Total, aes(x = Year, y = Percent_FF, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("Percentage electricity generated by fossil fuels")
p_FF_percent
# Sum electricity generation by coal and gas for all countries
coal_gas_country <- filter(cdp_data, Source == "Coal" & Country != "World" | Source == "Natural gas" & Country != "World") %>%
group_by(Year, Source) %>%
summarise(ElectricityGeneration_GWh_TopFive = sum(ElectricityGeneration_GWh))
# Global coal and gas
coal_gas_global <- filter(cdp_data, Source == "Coal" & Country == "World" | Source == "Natural gas" & Country == "World")
coal_gas_global <- select(coal_gas_global, -c(Country, Units))
# Divide country generation by gloabl value to get proportion and join into single df
coal_gas <- full_join(coal_gas_country, coal_gas_global, by = c('Year','Source')) %>%
group_by(Year, Source) %>%
mutate(
Percent = ElectricityGeneration_GWh_TopFive / ElectricityGeneration_GWh
)
rename(coal_gas, ElectricityGeneration_GWh_Global = ElectricityGeneration_GWh)
glimpse(coal_gas)
names(which(colSums(is.na(coal_gas))>0))
# Plot changes until 2015
coal_gas_2015 <- filter(coal_gas, Year < 2018)
p_coal_gas_changes_2015 <- ggplot(coal_gas_2015, aes(x = Year, y = Percent, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_coal_gas_changes_2015
require(rvest)
url <- "https://en.wikipedia.org/wiki/Emission_intensity"
table_XPath <- '//*[@id="mw-content-text"]/div[1]/table[1]'
lifecycle_GHG_emissions <- url %>%
read_html() %>%
html_nodes(xpath=table_XPath) %>%
html_table()
lifecycle_GHG_emissions <-lifecycle_GHG_emissions[[1]]
lifecycle_GHG_emissions <- rename(lifecycle_GHG_emissions, Source = Technology, GHG_EF = `50th percentile  (g CO2-eq/kWhe)`) # Rename columns to match CDP data
## View lifecycle GHG data
head(lifecycle_GHG_emissions)
str(lifecycle_GHG_emissions)
## Add GHG values to cdp data to find emissions
emissions <- full_join(cdp_data, lifecycle_GHG_emissions, by = c('Source')) %>% na.omit() %>% # Nas will be produced from countries not generating electricity by a certain source one year and any additional Sources that were included in the wiki data (i.e. didn't match).
mutate(
ElectricityGeneration_kWh = ElectricityGeneration_GWh * 1e6, #Convert from GWh to kWh
GHG_Emissions = ElectricityGeneration_kWh * GHG_EF # Calculate emissions
)
total_emissions <- emissions %>%
group_by(Year, Country) %>%
summarise(Total_GHG_Emissions = sum(GHG_Emissions))
p_GHG_emissions <- ggplot(filter(total_emissions, Country != "World"), aes(x = Year, y = Total_GHG_Emissions, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("GHG Emissions")
p_GHG_emissions
View(FF_electricity)
View(FF_electricity)
# Choose country to explore
country <- "China"
country_data <- subset(cdp_data, cdp_data$Country == country) # Subset data by contry of interest
country_data <- na.omit(country_data) # remove NAs
# Plot different sources over time
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
# Combine fossil fuels
FF_electricity <- subset(country_data, country_data$Source == "Coal" | country_data$Source == "Natural gas" | country_data$Source == "Oil")
####FF <- filter(country_data, Source == "Coal" | Source == "Natural gas" | Source == "Oil")
FF_electricity <- aggregate(FF_electricity$ElectricityGeneration_GWh, by=list(Year = FF_electricity$Year), FUN=sum, na.rm=TRUE)
names(FF_electricity)[names(FF_electricity) == "x"] <- "ElectricityGeneration_GWh"
FF_electricity$Source <- "Fossil Fuel"
# Find FF as a percentage of total generation
country_total <- subset(total_electricity, total_electricity$Country == country)
country_total$Country <- NULL
country_total$Source <- "Total"
# Combine FF and Total
FF_totals <- rbind(country_total, FF_electricity)
percent_FF <- data.frame(matrix(ncol=2,nrow=length(unique(FF_totals$Year)), dimnames=list(NULL, c("Year", "Percentage"))))
count <- 1
for (i in unique(FF_totals$Year)){
df <- subset(FF_totals, FF_totals$Year == i)
percent <- df[df$Source == "Fossil Fuel", "ElectricityGeneration_GWh"] / df[df$Source == "Total", "ElectricityGeneration_GWh"]
percent_FF$Year[count] <- i
percent_FF$Percentage[count] <- percent * 100
count = count + 1
}
# Plot
p_china_FF <- ggplot(percent_FF, aes(x = Year, y = Percentage)) +
geom_point() +
geom_line()+
theme_bw() +
ylab("Percentage of electricity generated by fossil fuels in China")
p_china_FF
## FF vs Other sources
# Combine other sources
other_electricity <- subset(country_data, country_data$Source != "Coal" & country_data$Source != "Natural gas" & country_data$Source != "Oil")
p_china_FF
# Choose country to explore
country <- "China"
country_data <- subset(cdp_data, cdp_data$Country == country) # Subset data by contry of interest
country_data <- na.omit(country_data) # remove NAs
# Plot different sources over time
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
# Combine fossil fuels
FF_electricity <- subset(country_data, country_data$Source == "Coal" | country_data$Source == "Natural gas" | country_data$Source == "Oil")
####FF <- filter(country_data, Source == "Coal" | Source == "Natural gas" | Source == "Oil")
FF_electricity <- aggregate(FF_electricity$ElectricityGeneration_GWh, by=list(Year = FF_electricity$Year), FUN=sum, na.rm=TRUE)
names(FF_electricity)[names(FF_electricity) == "x"] <- "ElectricityGeneration_GWh"
FF_electricity$Source <- "Fossil Fuel"
# Find FF as a percentage of total generation
country_total <- subset(total_electricity, total_electricity$Country == country)
country_total$Country <- NULL
country_total$Source <- "Total"
# Combine FF and Total
FF_totals <- rbind(country_total, FF_electricity)
percent_FF <- data.frame(matrix(ncol=2,nrow=length(unique(FF_totals$Year)), dimnames=list(NULL, c("Year", "Percentage"))))
count <- 1
for (i in unique(FF_totals$Year)){
df <- subset(FF_totals, FF_totals$Year == i)
percent <- df[df$Source == "Fossil Fuel", "ElectricityGeneration_GWh"] / df[df$Source == "Total", "ElectricityGeneration_GWh"]
percent_FF$Year[count] <- i
percent_FF$Percentage[count] <- percent * 100
count = count + 1
}
# Plot
p_china_FF <- ggplot(percent_FF, aes(x = Year, y = Percentage)) +
geom_point() +
geom_line()+
theme_bw() +
ylab("Percentage of electricity generated by fossil fuels in China")
p_china_FF
source('~/Documents/CDP_Task/Code/cdp_task_code.R')
View(FF_totals)
View(FF_totals)
FF_electricity <- filter(cdp_data, Source == c("Coal", "Natural gas", "Oil")) #%>% # filter by fossil fuel
View(FF_electricity)
View(FF_electricity)
FF_electricity <- filter(cdp_data, Source == "Coal"| Source =="Natural gas" | Source == "Oil")) #%>% # filter by fossil fuel
FF_electricity <- filter(cdp_data, Source == "Coal"| Source =="Natural gas" | Source == "Oil") #%>% # filter by fossil fuel
View(FF_electricity)
View(FF_electricity)
FF_electricity <- filter(cdp_data, Source == "Coal"| Source =="Natural gas" | Source == "Oil") %>% # filter by fossil fuel
group_by(Year, Country) %>%
summarise(FossilFuel_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh)) # sum generation values from all sources
View(FF_electricity)
FF_Total <- full_join(FF_electricity, total_electricity, by = c('Year', 'Country')) %>% # join total generation with fossil fuel generation
mutate(
Percent_FF = FossilFuel_ElectricityGeneration_GWh / Total_ElectricityGeneration_GWh # calculate percentage
)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/CDP_Task/Code/") # set working directory
rm(list=ls(all=TRUE))
graphics.off()
require(ggplot2)
require(dplyr)
cdp_data <- read.csv(file = "../Data/Electricity generation by source - top 5.csv", stringsAsFactors = TRUE)
head(cdp_data) # View first few rows
str(cdp_data) # View data structure
names(which(colSums(is.na(cdp_data))>0)) # List columns containing NAs
head(cdp_data[rowSums(is.na(cdp_data)) > 0, ]) # List first rows that contain NAs
# Change column name to avoid dots and remove NAs
cdp_data <- rename(cdp_data, ElectricityGeneration_GWh = Electricity.Generation..GWh.) %>% na.omit()
###### FIND WAY TO REPESENT THIS AS GRAPH NOT JUST AS A TABLE.  REPORT NUMBER OF NA rows
total_electricity <- cdp_data  %>%
group_by(Year, Country) %>%
summarise(Total_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh))
#Plots for countries
p_country_totals <- ggplot(filter(total_electricity, Country!='World'), aes(x = Year, y = Total_ElectricityGeneration_GWh, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
#theme(legend.position="bottom") +
ylab("Total Electricity Generation [GWh]")
p_country_totals
# Choose country to explore
country <- "China"
country_data <- filter(cdp_data, Country == country)
p_sources <- ggplot(country_data, aes(x = Year, y = ElectricityGeneration_GWh, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_sources
FF_electricity <- filter(cdp_data, Source == "Coal"| Source =="Natural gas" | Source == "Oil") %>% # filter by fossil fuel
group_by(Year, Country) %>%
summarise(FossilFuel_ElectricityGeneration_GWh = sum(ElectricityGeneration_GWh)) # sum generation values from all sources
FF_Total <- full_join(FF_electricity, total_electricity, by = c('Year', 'Country')) %>% # join total generation with fossil fuel generation
mutate(
Percent_FF = FossilFuel_ElectricityGeneration_GWh / Total_ElectricityGeneration_GWh # calculate percentage
)
p_FF_percent <- ggplot(FF_Total, aes(x = Year, y = Percent_FF, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("Percentage electricity generated by fossil fuels")
p_FF_percent
# Sum electricity generation by coal and gas for all countries
coal_gas_country <- filter(cdp_data, Source == "Coal" & Country != "World" | Source == "Natural gas" & Country != "World") %>%
group_by(Year, Source) %>%
summarise(ElectricityGeneration_GWh_TopFive = sum(ElectricityGeneration_GWh))
# Global coal and gas
coal_gas_global <- filter(cdp_data, Source == "Coal" & Country == "World" | Source == "Natural gas" & Country == "World")
coal_gas_global <- select(coal_gas_global, -c(Country, Units))
# Divide country generation by gloabl value to get proportion and join into single df
coal_gas <- full_join(coal_gas_country, coal_gas_global, by = c('Year','Source')) %>%
group_by(Year, Source) %>%
mutate(
Percent = ElectricityGeneration_GWh_TopFive / ElectricityGeneration_GWh
)
rename(coal_gas, ElectricityGeneration_GWh_Global = ElectricityGeneration_GWh)
glimpse(coal_gas)
names(which(colSums(is.na(coal_gas))>0))
# Plot changes until 2015
coal_gas_2015 <- filter(coal_gas, Year < 2018)
p_coal_gas_changes_2015 <- ggplot(coal_gas_2015, aes(x = Year, y = Percent, fill = Source)) +
geom_point(aes(color=Source)) +
geom_line(aes(color=Source))+
theme_bw() +
ylab("Electricity Generation [GWh]")
p_coal_gas_changes_2015
require(rvest)
url <- "https://en.wikipedia.org/wiki/Emission_intensity"
table_XPath <- '//*[@id="mw-content-text"]/div[1]/table[1]'
lifecycle_GHG_emissions <- url %>%
read_html() %>%
html_nodes(xpath=table_XPath) %>%
html_table()
lifecycle_GHG_emissions <-lifecycle_GHG_emissions[[1]]
lifecycle_GHG_emissions <- rename(lifecycle_GHG_emissions, Source = Technology, GHG_EF = `50th percentile  (g CO2-eq/kWhe)`) # Rename columns to match CDP data
## View lifecycle GHG data
head(lifecycle_GHG_emissions)
str(lifecycle_GHG_emissions)
## Add GHG values to cdp data to find emissions
emissions <- full_join(cdp_data, lifecycle_GHG_emissions, by = c('Source')) %>% na.omit() %>% # Nas will be produced from countries not generating electricity by a certain source one year and any additional Sources that were included in the wiki data (i.e. didn't match).
mutate(
ElectricityGeneration_kWh = ElectricityGeneration_GWh * 1e6, #Convert from GWh to kWh
GHG_Emissions = ElectricityGeneration_kWh * GHG_EF # Calculate emissions
)
total_emissions <- emissions %>%
group_by(Year, Country) %>%
summarise(Total_GHG_Emissions = sum(GHG_Emissions))
p_GHG_emissions <- ggplot(filter(total_emissions, Country != "World"), aes(x = Year, y = Total_GHG_Emissions, fill = Country)) +
geom_point(aes(color=Country)) +
geom_line(aes(color=Country))+
theme_bw() +
ylab("GHG Emissions")
p_GHG_emissions
setdiff(lifecycle_GHG_emissions$Source, cdp_data$Source)
# Check differences between Sorce values
setdiff(lifecycle_GHG_emissions$Source, cdp_data$Source)
View(FF_Total)
